Bonjour

Aujourd'hui nous allons voir rapidement comment utiliser les 2 outils majeurs
qui viennent avec la distribution standard python, à savoir
l'interpréteur, qui s'appelle tout simplement python, et l'éditeur,
qui s'appelle IDLE.

Je suppose donc que vous avez installé python 2.7 sur votre
machine. 

Dans la première partie de cette vidéo nous allons voir le
fonctionnement de l'interpréteur python. Pour cela nous aurons
également besoin de lancer un terminal alphanumérique; selon les
systèmes, vous pouvez lancer une console de ce genre en utilisant
"cmd" sur windows, "xterm" sur linux, ou l'application "Terminal" sur
macos, comme je vais le faire tout de suite. Vous pouvez bien sûr
utiliser d'autres outils analogues.

Attention le terminal lui-même ne fait pas partie de la distribution
python, bien entendu.

====================
[[Ouvrir terminal]]

je me deplace dans le repertoire ou je veux travailler
$ cd MOOC/brouillon

je vais a present lancer python, comme on dit, en "mode interactif" c'est a dire sans argument

$ python 

# Montrer le numero de version

# Taper un truc basique
3 * 5

10*20

# montrer un truc simple - si possible sans erreur
  (calculer la liste ou la somme des 10 premiers carrés)
from operator import add
reduce (add, [ i**2 for i in range (1,11) ] )

langage interprete - pas besoin de compilation - retour immediat

# faire expres de se tromper : mauvais nom de variable
reduce (add, [ x**2 for i in range (1,11) ] )
les messages d'erreur - exception - essaient de donner le maximum d'informations 

# faire expres de se tromper a nouveau avec une erreur de syntaxe
reduce (add, [ x**2 for i in range (1,11) ] )

a la fin du cours : a l'aise avec les messages d'erreur

-------------------- aide
Voyons maintenant un peu un outil simple obtenir de la documentation en ligne

help(add)

disponible generalement sur les objets de type fonction ou classe

import operator
dir(operator)
'add' in dir(operator)

----

[[ Sortir de python ]]
parler de exit() ou Control-D


==================== 
C'est tres bien pour faire de tous petits calculs, et nous utiliserons beaucoup l'interpreteur python pendant ce cours 

Mais on ne peut pas s'amuser a retaper le programme a chaque fois - ni meme bien sur a utiliser un terminal...

C'est pourquoi un programme est stocke dans un ou plusieurs fichiers

Je voudrais vous montrer comment on utilise python pour lancer un vrai programme

J'ai cree a l'avance un fichier qui reprend le calcul de tout a l'heure sur la somme des premiers carres; 
nous verrons comment ecrire ca avec IDLE, pour l'instant je vous montre le contenu du fichier

$ cat programme.py (type en windows)
version un peu plus avancee 

Pour executer ce programme avec python je le lance en lui donnant le nom du fichier en argument

$ python programme.py

[[ programme.py est le point d'entree 
python va evaluer tout ce fichier, on dit un module en python, on y reviendra, et vous "rendra la main" comme on dit une fois qu' il aura termine
meme un programme qui fait plusieurs milliers de ligne a toujours un unique point d'entree

une premiere chose a remarquer est la chose suivante; lorsqu'on execute un programme avec cette technique, on n'a plus, comme c'etait le cas avec le mode interactif, de "retour" sur chaque ligne qu'on execute; voyons ca sur un second exemple

$ cat arith.py (type en windows)
3 * 5
10*20
Control-D

$ python arith.py
$ 

Ce programme ne produit aucun effet; c'est delibere car on ne pourrait pas imprimer tous les resultats de toutes les lignes d'un programme de plusieurs millers de lignes. A la place dans ce mode dit de "mode batch" python n'imprime que exactement ce que vous lui demandez d'imprimer

$ cat arith_print.py
montrer print sur une des deux lignes

$ python arith_print.py

Je vous signale enfin un mode de fonctionnement qui peut etre utile egalement, une sorte d'hybride entre les modes interactif et batch, comme ceci

$ cat continue.py

$ python -i continue.py
n
exit()

execution, puis mode interactif


Nous venons de voir les deux grands modes d'utilisation de l'interpreteur python, interactif et batch, et le mode mineur hybride 'python -i'

Nous allons a present voir comment utiliser IDLE, a tout de suite
