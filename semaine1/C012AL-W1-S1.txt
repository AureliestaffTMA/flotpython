Bonjour, et bienvenue dans ce MOOC consacré au langage python.

Je suis Thierry Parmentelat, et avec Arnaud Legout, qui vous a
présenté la vidéo d'accroche, nous animerons ce MOOC pendant les 7
semaines qui viennent. 

[ afficher le slide sur les 7 semaines ]

Cette première semaine sera consacrée à une brève introduction, et à une
prise en mains, pour vous laisser le temps d'installer le logiciel
nécessaire sur votre propre machine, et de vous familiariser avec les
différents outils.

Puis à partir de la semaine 2, nous verrons dans les vidéos avec Arnaud les
fondements du langage dans le détail.

Nous commencerons par l'étude des différents types de base, qui avec
notamment les dictionnaires et les ensembles sont une des grandes
forces de python; nous verrons ensuite les structures de contrôle
élémentaires ainsi que les fonctions, et les modules qui permettent de
rendre le code réutilisable et modulaire. Enfin nous aborderons le
système de classes, qui permet à chacun de se définir ses propres
types de données.

Tout au long du cours nous insisterons sur les grands choix de
conception du langage, à savoir le typage dynamique, le fait que tout
est objet en python, la liaison lexicale, et les itérateurs.

====================

Voici comment nous avons choisi d'organiser le matériel pédagogique du
MOOC. Chaque semaine contient quelques vidéos, 8 au maximum. Ces
vidéos vont vous expliquer méthodiquement les mécanismes fondamentaux
du langage.

==========
Cela dit le format de la vidéo ne se prête pas à l'exhaustivité; et c'est
pourquoi vous trouverez la plupart du temps un certain nombre de
compléments, qui reprennent et approfondissent le sujet de la vidéo.

Il nous faut insister sur la nécessité de suivre aussi ces compléments.

Comme nous le verrons dans la 3eme vidéo de cette semaine, les
compléments sont rédigés avec ipython, sous forme de documents qu'on
appelle des notebooks, pardon pour le néologisme, et qui contiennent
du code que vous pourrez exécuter vous même, et même éventuellement
modifier, de façon à vous permettre de facilement expérimenter par
vous mêmes.

Vous constaterez aussi que les compléments sont classés - à titre
indicatif - en trois niveaux: basique, intermédiaire et avancé. Nous
savons que le temps est une ressource rare, nous espérons que ceci
pourra vous aider à composer votre propre cursus en fonction de vos
objectifs.

Enfin, nous proposerons naturellement un certain nombre de quiz et
d'exercices.  Le format des quiz est certes un peu limité  compte tenu
du sujet du cours, mais nous est nécessaire pour obtenir un retour de
votre part. 

La partie la plus substantielle des exercices seront proposés sous
forme de notebooks. Nous y reviendrons, mais vous aurez avec ces
exercices les moyens de faire une auto-évaluation en vérifiant que
votre code répond bien à la question.

Vous remarquerez d'ailleurs que le contenu du cours est allégé en
semaines 6 et 7 pour vous laisser davantage de temps pour les exercices.

J'aimerais enfin attirer votre attention sur le fait que dans les
vidéos, pour des raisons pratiques, on utilise massivement des noms de
variables très courts - sinon on passerait trop de temps au clavier. 
Toutefois il nous faut insister, si vous écrivez du code qui risque de
durer au delà de la demie-heure, prenez bien soin d'utiliser des noms
de variables parlants, comme nous vous le rappelerons très bientôt.

Dans l'état actuel toutefois, nous ne sommes pas en mesure de délivrer
un certificat à l'issue du mooc.

====================
Pour préciser un peu mieux le programme du mooc: 

Tout d'abord, comme vous le savez sans doute, python est actuellement
disponible dans deux versions légèrement différentes, la version 2 et
la version 3, et nous avons choisi de construire ce cours sur
python2. python3 est certes la version sur laquelles se font les
nouveaux développements, mais d'une part les concepts les plus avancés
ont été rapportés dans python2, et d'autre part et surtout la plus
grande majorité du code existant fonctionne toujours exclusivement en python2.


D'autre part, notre parti-pris a été de se concentrer sur le coeur du
langage. Nous allons par exemple étudier en profondeur les types de
base, les classes, ainsi que la modularité dans python, c'est à dire
la notion de module, héritée de modula-3.

Ce sont ces notions qui sont la clé pour être capable de rapidement
comprendre et appréhender comment utiliser telle ou telle librairie.
Naturellement nous étudierons aussi quelques unes de ces librairies,
et notamment parmi ce qu'il est convenu d'appeler la librairie
standard, c'est à dire les outils qui font partie intégrante de la
distribution standard python; on ne peut pas installer python sans la
librairie standard. Nous signalerons également quelques outils tiers -
c'est à dire qui ne sont pas dans la bibliothèque standard -
importants.

Mais il n'est pas envisageable de tout présenter, même si l'on voulait
se limiter à la librairie standard, et donc a fortiori sur l'énorme base de code
disponible. Certains outils, comme django pour réaliser un serveur
web, ou encore numpy pour le calcul scientifique, pourraient
facilement faire l'objet d'un mooc à eux tout seuls.

Notre objectif est donc plutôt de vous fournir une très bonne base de
départ, un socle, pour que vous puissiez par vous même découvrir, choisir et
apprendre facilement telle ou telle biblitohèque en fonction de
vos besoins.


Pour conclure, je vous invite à utiliser également le forum, de façon
à échanger entre vous sur tous les sujets qui peuvent vous poser
problème. N'oubliez pas que vous n'êtes pas seul, aussi n'hésitez pas
à soumettre vos idées et suggestions à la communauté des étudiants.

Avant de nous retrouver dans la prochaine vidéo, il est nécessaire
d'installer python 2.7 sur votre machine, c'est le moment d'y penser si
vous ne l'avez pas encore fait; vous trouverez dans un
complément quelques indications à ce sujet.

À bientôt.
