###################################################################

## Vidéo 1 (101 des modules)

CO12AL-W3-VIDEO01.txt

## Compléments Vidéo 1

-ajouter un lien vers la Python Standard Library

## Quizz Vidéo 1

## Exercices Vidéo 1


###################################################################

## Vidéo 2 (indentation comme syntaxe de base)

CO12AL-W3-VIDEO02.txt

## Compléments Vidéo 2

-ajouter un lien vers la PEP 008 (sur les conventions de codage)
-ajouter un lien vers cette FAQ https://docs.python.org/2/faq/design.html#why-are-colons-required-for-the-if-while-def-class-statements

## Quizz Vidéo 2

## Exercices Vidéo 2


###################################################################

## Vidéo 3 (if elif else + and/or/not)

CO12AL-W3-VIDEO03.txt

## Compléments Vidéo 3

## Quizz Vidéo 3

## Exercices Vidéo 3

-opérateurs de tests booléens and, or, not (vu en cours, montrer
d'autres exemples)
-opération shortcircuit and et or (vu en cours, montrer d'autres exemples)
-discuter de == : quand peut-on comparer des objets de types différents
(seulement les numériques, et les set et frozenset, mais
(1, 2) n'est pas égal à [1, 2])
-quel sens à des comparaisons (avec < ou >) de listes ou dicts. 


###################################################################

## Vidéo 4 (for, continue, break)

CO12AL-W3-VIDEO04.txt

## Compléments Vidéo 4

-présenter break
-présenter continue (en expliquant que, comme pour les goto, les sauts
dans le code nuisent à la compréhension, il faut donc l'éviter)
-présenter pass qui est utilisé pour rendre syntaxiquement correct un bloc
de code que l'on n'a pas encore écrit (voir pour les fonctions, for, if)
-voir le else du for
-présenter enumerate, zip, et les itérateurs des dictionnaires
-présenter xrange() et sont avantage par rapport à range() (pas 
d'occupation mémoire). Dans le même esprit expliquer l'avantage
des itérateurs sur des dict (iteritems/itervalues/iterkeys) par rapport
aux listes. 
-présenter la méthode built-in iter() en expliquant que comme
__iter__() est une méthode Python privée, on ne doit pas l'appeler
directement dans un programme, on doit utiliser la built-in iter()
à la place.

## Quizz Vidéo 4

## Exercices Vidéo 4

###################################################################

## Vidéo 5 (files)

## Compléments Vidéo 5

## Quizz Vidéo 5

## Exercices Vidéo 5


###################################################################

## Vidéo 6 (while)

## Compléments Vidéo 6
-voir le else du while

## Quizz Vidéo 6

## Exercices Vidéo 6

x='spam'
while x:
    print x
    x = x[1:]




###################################################################

## Vidéo 7

## Compléments Vidéo 7

## Quizz Vidéo 7

## Exercices Vidéo 7


###################################################################

## Vidéo 8 

## Compléments Vidéo 8

## Quizz Vidéo 8

## Exercices Vidéo 8


###################################################################

## Vidéo 9 

## Compléments Vidéo 9

## Quizz Vidéo 9

## Exercices Vidéo 9


###################################################################

## Vidéo 10 

## Compléments Vidéo 10

## Quizz Vidéo 10

## Exercices Vidéo 10


###################################################################

## Vidéo 11 

## Compléments Vidéo 11

## Quizz Vidéo 11

## Exercices Vidéo 11


###################################################################

